{"version":3,"sources":["reducers/errorsReducer.js","reducers/projectTaskReducer.js","reducers/securityReducer.js","reducers/index.js","actions/types.js","store.js","securityutils/setJWT.js","actions/securityActions.js","components/Navbar.js","actions/projectTaskActions.js","components/projectTask/ProjectTaskItem.js","components/ProjectBoard.js","components/projectTask/AddProjectTask.js","components/projectTask/UpdateProjectTask.js","components/usermanagement/Register.js","components/usermanagement/Login.js","containers/App.js","serviceWorker.js","index.js"],"names":["initialState","project_tasks","project_task","validToken","user","combineReducers","errors","state","arguments","length","undefined","action","type","payload","Object","objectSpread","filter","id","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","apply","setJWT","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","Navbar","this","props","location","href","navbarlinks","_this$props$security","userIsNotAuthenticated","react_default","a","createElement","className","react_router_dom","to","userIsAuthenticated","username","onClick","bind","data-toggle","data-target","Component","connect","addProjectTask","history","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","post","push","t0","response","data","stop","_x","ProjectTaskItem","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","isChecked","deleteProjectTask","updatedTask","summary","acceptanceCriteria","status","limitDate","handleOptionChange","assertThisInitialized","onCheckboxChange","setState","project_task_id","target","value","_this$props","concat","onDeleteClick","style","divStyle","toString","onChange","checked","name","htmlFor","marginLeft","marginTop","_ref3","_callee3","_context3","confirm","delete","_x3","ProjectBoard","getBacklog","BoardContent","todoItems","inProgressItems","doneItems","tasks","map","projectTask_ProjectTaskItem","key","i","role","BoardAlgorithm","_ref2","_callee2","res","_context2","get","sent","_x2","AddProjectTask","onChangeInput","defineProperty","preventDefault","_this$state","newProjectTask","Number","nextProps","_this$state2","classnames","is-invalid","placeholder","UpdateProjectTask","_nextProps$project_ta","substr","match","params","getProjectTask","_ref4","_callee4","_context4","_x4","Register","firstname","lastname","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","jwt","jwtToken","decode_jwt","currentTime","Date","now","exp","App","components_Navbar","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","es","App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2620f6b5.chunk.js","sourcesContent":["import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type) {\r\n        case GET_ERRORS: \r\n            return action.payload;\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import { \r\n    GET_PROJECT_TASKS, \r\n    DELETE_PROJECT_TASK,\r\n    GET_PROJECT_TASK \r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type) {\r\n        case GET_PROJECT_TASKS:\r\n            return { ...state, project_tasks: action.payload };\r\n        \r\n        case GET_PROJECT_TASK:\r\n            return { ...state, project_task: action.payload };\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return { ...state, project_tasks: state.project_tasks.filter(\r\n                project_task =>  project_task.id !== action.payload\r\n                ) \r\n            };\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport errorsReducer from './errorsReducer';\r\nimport projectTaskReducer from './projectTaskReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers ({\r\n    errors: errorsReducer,\r\n    project_task: projectTaskReducer,\r\n    security: securityReducer\r\n});","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECT_TASKS = \"GET_PROJECT_TASKS\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n","import { createStore , applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\nlet store;\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(\r\n            applyMiddleware(...middleware), \r\n            ReactReduxDevTools\r\n        )\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(applyMiddleware(...middleware))\r\n    );\r\n}\r\n\r\nexport default store;\r\n\r\n","import axios from \"axios\"\r\n\r\nconst setJWT = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWT;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWT from \"../securityutils/setJWT\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data    \r\n        });\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n      // post => Login Request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWT(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWT(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n      });\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout }  from '../actions/securityActions'\r\n\r\nclass Navbar extends Component {\r\n\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href(\"/\");\r\n    }\r\n    render() {\r\n        const { validToken, user } = this.props.security;\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/register\">\r\n                            Registrarse\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            Iniciar sesion\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/dashboard\">\r\n                            <i className=\"fas fa-user-circle mr-1\"/>\r\n                            {user.username}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link \r\n                            className=\"nav-link\" \r\n                            to=\"/register\" \r\n                            onClick={this.logout.bind(this)}\r\n                        >\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        let navbarlinks;\r\n\r\n        if (validToken && user) {\r\n            navbarlinks = userIsAuthenticated; \r\n        } else \r\n            navbarlinks = userIsNotAuthenticated;\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Projection\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    { navbarlinks }\r\n                </div>\r\n            </nav>\r\n          );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n     logout: PropTypes.func.isRequired,\r\n     security: PropTypes.object.isRequired\r\n}; \r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar);","import axios from 'axios';\r\nimport { \r\n    GET_ERRORS,\r\n    GET_PROJECT_TASKS,\r\n    DELETE_PROJECT_TASK, \r\n    GET_PROJECT_TASK \r\n} from './types';\r\n\r\nexport const addProjectTask = (project_task, history) => async dispatch => {\r\n    \r\n    try {\r\n        await axios.post(\"/api/tasks\", project_task);\r\n        history.push(\"/\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n}\r\n\r\nexport const getBacklog = () => async dispatch => {\r\n    const res = await axios.get(\"/api/tasks/all\")\r\n    dispatch({\r\n        type: GET_PROJECT_TASKS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const deleteProjectTask = project_task_id => async dispatch => {\r\n    if(window.confirm(`Estás eliminando el proyecto ${project_task_id}. Esta acción no puede ser modificada.`)){\r\n        await axios.delete(`/api/tasks/${project_task_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: project_task_id\r\n        });\r\n    } \r\n}\r\n\r\nexport const getProjectTask = (project_task_id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/tasks/${project_task_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/\");\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types';\r\nimport { deleteProjectTask, addProjectTask } from '../../actions/projectTaskActions';\r\nclass ProjectTaskItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            status: 'todo',\r\n            isChecked: false\r\n        }\r\n        this.handleOptionChange = this.handleOptionChange.bind(this);\r\n        this.onCheckboxChange = this.onCheckboxChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ status: this.props.project_task.status })\r\n    }\r\n\r\n    onDeleteClick(project_task_id) {\r\n        this.props.deleteProjectTask(project_task_id)\r\n    }\r\n\r\n    handleOptionChange(e) {\r\n        this.setState({ status: e.target.value })  \r\n    }\r\n\r\n    onCheckboxChange(e) {\r\n        debugger\r\n        this.setState({ isChecked: !this.state.isChecked})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const {project_task} = this.props;\r\n\r\n        if (this.state.isChecked) {\r\n            this.props.deleteProjectTask(project_task.id)\r\n        }\r\n        \r\n        const updatedTask = {\r\n            id: project_task.id,\r\n            summary: project_task.summary,\r\n            acceptanceCriteria: project_task.acceptanceCriteria,\r\n            status: this.state.status,\r\n            limitDate: project_task.limitDate\r\n        };\r\n        \r\n        this.props.addProjectTask(updatedTask, this.props.history);\r\n    }\r\n  \r\n    render() {\r\n        const {project_task, id} = this.props;\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n    \r\n                <div className=\"card-header text-primary\">\r\n                    ID: {project_task.id}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <p className=\"card-text text-truncate \">\r\n                        Fecha límite: {project_task.limitDate}\r\n                    </p>\r\n                    <Link to={`updateProjectTask/${project_task.id}`} className=\"btn btn-primary\">\r\n                        Ver / Actualizar\r\n                    </Link>\r\n    \r\n                    <button className=\"btn btn-danger ml-4\"\r\n                    onClick={this.onDeleteClick.bind(this, project_task.id)}\r\n                    >\r\n                        Eliminar  \r\n                    </button>\r\n\r\n                    <br/>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"custom-control custom-radio\" style={divStyle}>\r\n                                    <input type=\"radio\" className=\"custom-control-input\" id={id.toString()+id.toString()}\r\n                                    onChange={this.handleOptionChange} value=\"1\"\r\n                                    checked={this.state.status == '1'} name={project_task.id}/>\r\n                                    <label className=\"custom-control-label\" htmlFor={id.toString()+id.toString()}>To do</label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-radio\" style={divStyle}>\r\n                                    <input type=\"radio\" className=\"custom-control-input\" id={(id+1).toString()+id.toString()}\r\n                                    onChange={this.handleOptionChange} value=\"2\"\r\n                                    checked={this.state.status == '2'} name={project_task.id}/>\r\n                                    <label className=\"custom-control-label\" htmlFor={(id+1).toString()+id.toString()}>In Progress</label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-radio\" style={divStyle}>\r\n                                    <input type=\"radio\" className=\"custom-control-input\" id={(id+2).toString()+id.toString()} \r\n                                    onChange={this.handleOptionChange} value=\"3\"\r\n                                    checked={this.state.status == '3'} name={project_task.id}/>\r\n                                    <label className=\"custom-control-label\" htmlFor={(id+2).toString()+id.toString()}>Done</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id={id.toString()+id.toString()+\"done\"}\r\n                                    checked={this.state.isChecked} onChange={this.onCheckboxChange}/>\r\n                                <label className=\"custom-control-label\" htmlFor={id.toString()+id.toString()+\"done\"}>done</label>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nvar divStyle = {\r\n    marginLeft: '20px',\r\n    marginTop: '20px'\r\n  };\r\n\r\nProjectTaskItem.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired,\r\n    addProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {deleteProjectTask, addProjectTask}) (ProjectTaskItem);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectTaskItem from './projectTask/ProjectTaskItem';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../actions/projectTaskActions';\r\n\r\nclass ProjectBoard extends Component {\r\n    componentDidMount() {\r\n      this.props.getBacklog();\r\n    }\r\n  \r\n    render() {\r\n      const { project_tasks } = this.props.project_tasks;\r\n  \r\n      let BoardContent;\r\n      let todoItems = []\r\n      let inProgressItems = []\r\n      let doneItems = []\r\n  \r\n      const BoardAlgorithm = project_tasks => {\r\n          if(project_tasks.length) {\r\n              const tasks = project_tasks.map(project_task => (\r\n                  <ProjectTaskItem key={project_task.id} project_task={project_task} id={project_task.id}/>\r\n              ));\r\n  \r\n              for(let i = 0; i < tasks.length; i++){\r\n                  if(tasks[i].props.project_task.status === 1) {\r\n                      todoItems.push(tasks[i])\r\n                  } else if (tasks[i].props.project_task.status === 2) {\r\n                      inProgressItems.push(tasks[i])\r\n                  } else {\r\n                      doneItems.push(tasks[i])\r\n                  }\r\n              }\r\n  \r\n              return (\r\n                  <div>\r\n                      <div className=\"container\">\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-4\">\r\n                                  <div className=\"card text-center mb-2\">\r\n                                      <div className=\"card-header bg-secondary text-white\">\r\n                                          <h3>TO DO</h3>\r\n                                      </div>\r\n                                  </div>\r\n                                  {todoItems}\r\n                              </div>\r\n                              <div className=\"col-md-4\">\r\n                                  <div className=\"card text-center mb-2\">\r\n                                      <div className=\"card-header bg-primary text-white\">\r\n                                          <h3>In Progress</h3>\r\n                                      </div>\r\n                                  </div>\r\n                                  {inProgressItems}\r\n                              </div>\r\n                              <div className=\"col-md-4\">\r\n                                  <div className=\"card text-center mb-2\">\r\n                                      <div className=\"card-header bg-success text-white\">\r\n                                          <h3>Done</h3>\r\n                                      </div>\r\n                                  </div>\r\n                                  {doneItems}\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              );\r\n  \r\n          } else {\r\n              return(\r\n                  <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                      No hay tareas en este proyecto.\r\n                  </div>\r\n              );\r\n          }\r\n      };\r\n  \r\n      BoardContent = BoardAlgorithm(project_tasks);\r\n  \r\n      return (\r\n          <div className=\"container\">\r\n          <Link to=\"/addProjectTask\" className=\"btn btn-primary mb-3\">\r\n              <i className=\"fas fa-plus-circle\"> Crear tarea</i>\r\n          </Link>\r\n          <br />\r\n          <hr />\r\n          {BoardContent}\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\nProjectBoard.propTypes = {\r\n    getBacklog: PropTypes.func.isRequired,\r\n    project_tasks: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_tasks: state.project_task\r\n});\r\n\r\nexport default connect(mapStateToProps, {getBacklog}) (ProjectBoard);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addProjectTask } from '../../actions/projectTaskActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProjectTask extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            limitDate: \"\",\r\n            errors: {}\r\n        };\r\n    }  \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors });\r\n        }\r\n      }\r\n    \r\n    onChangeInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault() //don't refresh the page\r\n        const { summary, acceptanceCriteria, status, limitDate } = this.state;\r\n        \r\n        const newProjectTask = {\r\n            summary: summary,\r\n            acceptanceCriteria: acceptanceCriteria,\r\n            status: Number(status),\r\n            limitDate: limitDate\r\n        };\r\n    \r\n        this.props.addProjectTask(newProjectTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors, summary, acceptanceCriteria, status, limitDate } = this.state;\r\n\r\n        return (\r\n            <div className=\"addProjectTask\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h4 className=\"display-4 text-center\">Agregar /Actualizar tarea</h4>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\" \r\n                                        value={summary}\r\n                                        placeholder=\"descripción de la tarea\"\r\n                                        onChange={this.onChangeInput} \r\n                                    />\r\n                                    {\r\n                                        errors.summary && (\r\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"Criterio de aceptación\" \r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={acceptanceCriteria}\r\n                                        onChange={this.onChangeInput}>\r\n                                    >\r\n                                    </textarea>\r\n                                        \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={this.onChangeInput}\r\n                                    >\r\n                                        <option value=\"\">Seleccione estado</option>\r\n                                        <option value=\"1\">TO DO</option>\r\n                                        <option value=\"2\">IN PROGRESS</option>\r\n                                        <option value=\"3\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    type='date' \r\n                                    className=\"form-control\" \r\n                                    name=\"limitDate\"\r\n                                    value={limitDate}\r\n                                    onChange={this.onChangeInput}\r\n                                 />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {addProjectTask} ) (AddProjectTask);","import React, { Component } from 'react'\r\nimport { connect }  from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getProjectTask, addProjectTask } from '../../actions/projectTaskActions';\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            id:\"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            limitDate: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    \r\n        const {\r\n        id,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        limitDate\r\n        } = nextProps.project_task;\r\n\r\n        if (limitDate != null) {\r\n            var str = limitDate.toString();\r\n            var res = str.substr(0, 10);\r\n        }\r\n    \r\n        this.setState({\r\n        id,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        limitDate: res\r\n        });\r\n    }\r\n    \r\n    componentDidMount() {\r\n    const { project_task_id } = this.props.match.params;\r\n    this.props.getProjectTask(project_task_id);\r\n    }\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const updatedTask = {\r\n        id: this.state.id,\r\n        summary: this.state.summary,\r\n        acceptanceCriteria: this.state.acceptanceCriteria,\r\n        status: this.state.status,\r\n        limitDate: this.state.limitDate\r\n        };\r\n\r\n    this.props.addProjectTask(updatedTask, this.props.history);\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { errors, summary, acceptanceCriteria, status, limitDate } = this.state;\r\n\r\n        return (\r\n            <div className=\"addProjectTask\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h4 className=\"display-4 text-center\">Agregar /Actualizar tarea</h4>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={summary}\r\n                                        onChange={this.onChangeInput}\r\n                                    />\r\n                                    {\r\n                                    errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )\r\n                                }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"Acceptance Criteria\" \r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={acceptanceCriteria}\r\n                                        onChange={this.onChangeInput}\r\n                                    >\r\n                                    </textarea>\r\n                                        \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"\r\n                                        value={status}\r\n                                        onChange={this.onChangeInput}\r\n                                    >\r\n                                        <option value=\"\">Seleccione estado</option>\r\n                                        <option value=\"1\">TO DO</option>\r\n                                        <option value=\"2\">IN PROGRESS</option>\r\n                                        <option value=\"3\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    type='date' \r\n                                    className=\"form-control\" \r\n                                    name=\"limitDate\"\r\n                                    value={limitDate}\r\n                                    onChange={this.onChangeInput}\r\n                                 />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    project_task: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    addProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.project_task.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, addProjectTask })(UpdateProjectTask);","import React, { Component } from 'react';\r\nimport { createNewUser } from \"../../actions/securityActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\" \r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            \"username\": \"\",\r\n            \"firstname\": \"\",\r\n            \"lastname\": \"\",\r\n            \"password\": \"\",\r\n            \"confirmPassword\": \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const { username, firstname, lastname, password, confirmPassword } = this.state;\r\n        const newUser = {\r\n            \"username\": username,\r\n            \"firstname\": firstname,\r\n            \"lastname\": lastname,\r\n            \"password\": password,\r\n            \"confirmPassword\": confirmPassword,\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name] : e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return(\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"John\" \r\n                                        name=\"firstname\"   \r\n                                        value={this.state.firstname}  \r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"Doe\" \r\n                                        name=\"lastname\"   \r\n                                        value={this.state.lastname}  \r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}  \r\n                                        placeholder=\"Johndoe@projection.com\" \r\n                                        name=\"username\" \r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\" \r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.confirmPassword\r\n                                        })}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" \r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.confirmPassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input name=\"registerBtn\" type=\"submit\" className=\"btn btn-info btn-block mt-4\" value=\"Registrarse\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        \"username\": \"\",\r\n        \"password\": \"\",\r\n        errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if (nextProps.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n      }\r\n\r\n      if (nextProps.errors) {\r\n          this.setState({errors: nextProps.errors});\r\n      } \r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    const LoginRequest = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name] : e.target.value})\r\n}\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.username\r\n                    })}  \r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\" \r\n                    value={this.state.username}\r\n                    onChange={this.onChange}  \r\n                  />\r\n                  {\r\n                    errors.username && (\r\n                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.password\r\n                    })}  \r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.password && (\r\n                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <input name=\"loginBtn\" type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login } )(Login);","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport ProjectBoard from '../components/ProjectBoard';\r\nimport AddProjectTask from '../components/projectTask/AddProjectTask';\r\nimport UpdateProjectTask from '../components/projectTask/UpdateProjectTask';\r\nimport Register from '../components/usermanagement/Register';\r\nimport Login from '../components/usermanagement/Login';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setJWT from '../securityutils/setJWT';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"../actions/types\";\r\nimport { logout } from '../actions/securityActions';  \r\nimport store from '../store';\r\n\r\n\r\nconst jwt = localStorage.jwtToken\r\n\r\nif (jwt) {\r\n  setJWT(jwt)\r\n  const decode_jwt = jwt_decode(jwt);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decode_jwt\r\n  });\r\n\r\n  const currentTime = Date.now()/1000;\r\n  if(decode_jwt.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href(\"/\");\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            {\r\n              //public routes\r\n            }\r\n            <Route exact path=\"/\" component = {Login} />\r\n            <Route exact path=\"/register\" component = {Register} />\r\n            {\r\n              //private routes\r\n            }\r\n            <Route exact path=\"/dashboard\" component={ProjectBoard} />\r\n            <Route exact path=\"/addProjectTask\" component={AddProjectTask} />\r\n            <Route exact path=\"/updateProjectTask/:project_task_id\" component={UpdateProjectTask} />\r\n          </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App />\r\n                </Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}